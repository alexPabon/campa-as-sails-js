<% if(me) { %>


    <% for (let section of sails.config.userPermission.sections){
        let findSection = me.sectionRole.find(role => role.section === section.name);

    if(findSection && ((findSection.permission !== sails.config.userPermission.canDo[`${findSection.role}`].none && section.rolesPermit.includes(`${findSection.role}`)) || me.isSuperAdmin)){ %>

        <div class="navbar-nav mr-auto px-4 border-bottom border_bottom_light_gray subSections <%= `sub_${section.name}` %>  <%= (me.sectName === section.name) ? '' : 'd-none' %>">
            <ul class="navbar-nav mr-auto flex-column flex-md-row justify-content-between">
                <%
                    // if(me.sectName === section.name){
                        for (let subSection of section.subSections){
                    let findSubSection = me.sectionRole.find(role => role.section === subSection.name);

                if(findSubSection && ((findSubSection.permission !== sails.config.userPermission.canDo[`${findSubSection.role}`].none && section.rolesPermit.includes(`${findSection.role}`)) || me.isSuperAdmin)){
                %>
                    <li class="nav-item mx-2 pb-2 pt-0 sub_menu">
                        <a class="nav-item nav-link ml-1 ml-md-0 mr-1 mr-md-0 border-0" href="<%= subSection.url %>">
                            <span class="<% if(me.subSectName === subSection.name) { %> sub_section_selected <% }else { %> no_sub_section_selected <% } %>pb-2 text-capitalize"><%= __(`Menu.${subSection.name}`) %></span>
                        </a>
                    </li>
                <% }} %>
            </ul>
        </div>
    <% }} %>

<% } %>

<style>
  .sub_section_selected {
    border-bottom: solid 2px #b906f3 !important;
    border-radius: 2px;
    color: #361549 !important;
    font-weight: bold;
  }

  .border_bottom_light_gray {
    border-color: lightgray !important;
  }

  .no_sub_section_selected:hover {
    border-bottom: #788f9f 2px solid;
  }
</style>

<script>

  let sections = document.getElementsByClassName('sections');
  let elements = document.getElementsByClassName('subSections');
  let lengthSections = sections.length;
  const sectionActive = "<%= me.sectName %>";
  let restore;

  for (let i = 0; i < lengthSections; i++) {

    sections[i].addEventListener('mouseover', function () {
      let id = this.getAttribute('id');

      clearTimeout(restore);
      for (var i = 0; i < elements.length; i++) {
        elements[i].classList.remove('d-none');

        if (!elements[i].classList.contains(`sub_${id}`))
          elements[i].classList.add('d-none');
      }
    });

    sections[i].addEventListener('mouseout', function () {
      clearTimeout(restore);
      restore = setTimeout(function () {
        let elements = document.getElementsByClassName('subSections');
        for (var i = 0; i < elements.length; i++) {
          elements[i].classList.remove('d-none');

          if (!elements[i].classList.contains(`sub_${sectionActive}`))
            elements[i].classList.add('d-none');


        }

      }, 1500);
    });

    // sub sections
    elements[i].addEventListener('mouseover', function () {
      clearTimeout(restore);
    });

    elements[i].addEventListener('mouseout', function () {
      clearTimeout(restore);
      restore = setTimeout(function () {
        let elements = document.getElementsByClassName('subSections');
        for (var i = 0; i < elements.length; i++) {
          elements[i].classList.remove('d-none');

          if (!elements[i].classList.contains(`sub_${sectionActive}`))
            elements[i].classList.add('d-none');

        }

      }, 300);
    });
  }

</script>
